name: Publish Helm Chart

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  build-chart-list:
    runs-on: ubuntu-latest
    outputs:
      helmcharts: ${{ steps.helm-list.outputs.json }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: helm-list
        run: |
          SUPPORTED_DIR=supported
          CONTRIB_DIR=contrib
          # Get the list of files changed based on the type of event
          # kicking off the GHA:
          # 1. For the main branch, diff the previous state of main vs
          #    the current commit
          # 2. For other branches (i.e., on someone's fork), diff main
          #    vs the current commit
          # 3. For PRs, diff the base ref vs the current commit
          if [[ $GITHUB_EVENT_NAME == 'pull_request' ]] ||
             [[ $GITHUB_EVENT_NAME == 'push' ]]; then
               if [[ $GITHUB_EVENT_NAME == 'pull_request' ]]; then
                   BASE=$(git merge-base origin/$GITHUB_BASE_REF HEAD)
               elif [[ $GITHUB_REF == 'refs/heads/main' ]]; then
                   BASE=${{github.event.before}}
               else
                   BASE=origin/main
               fi
               # List helm-chart root dirs where files have changed and the
               # root dir exists. Example value:
               # "helm-charts/supported helm-charts/contrib"
               helmcharts=$(git diff --name-only \
                                 "$BASE" \
                                 "$GITHUB_SHA" |
                        cut -d/ -f -3 |
                        sort |
                        uniq |
                        xargs -I {} find . -type d \
                                           -wholename ./{} \
                                           -printf "%P\n")
          fi
          # Ensure that the generated JSON array has a member,
          # otherwise GHA will throw an error about an empty matrix
          # vector in subsequent steps
          helm_json=$(echo -n "${helmcharts:-dummy}" | jq -Rcs '.|split("\n")')
          echo "::set-output name=json::$helm_json"

  build-and-push:
      runs-on: ubuntu-latest
      if: needs.build-chart-list.outputs.helmcharts != '["dummy"]'
      needs: build-chart-list
      strategy:
        fail-fast: false
        matrix:
          helmchart: ${{ fromJson(needs.build-chart-list.outputs.helmcharts) }}
      steps:
          - name: Checkout code
            uses: actions/checkout@v3
          
          - name: Helm tool installer
            uses: Azure/setup-helm@v3
            with:
              token: ${{ secrets.GITHUB_TOKEN }}
            id: install

          - name: Helm Chart Linter
            run: |
              helm lint ${{matrix.helmchart}}

          - name: Build Helm Chart
            run: |
              helm lint ${{matrix.helmchart}}
              helm package ${{matrix.helmchart}}

          - name: Push Helm chart
            if: >-
              github.ref == 'refs/heads/main' &&
              github.event_name != 'pull_request' &&
              github.repository_owner == 'osg-htc'
            run: |
              echo ${{secrets.OSG_HABOR_PASSWORD}} | helm registry login -u ${{secrets.OSG_HABOR_USER}} --password-stdin hub.opensciencegrid.org
              helm_chart_name=$(basename ${{matrix.helmchart}})
              helm_chart_package=$(helm package ${{matrix.helmchart}})
              helm_chart_tarball=$(basename "$helm_chart_package")
              helm push $helm_chart_tarball oci://hub.opensciencegrid.org/osg-htc/$helm_chart_name
